//27/4/2022
> DATA -
> What is the data?

All the raw facts or information is known as DATA 

> DATABASE -
> What is DATABASE ?

It is a place or medium used to store data in systematic and organized manner.

> DBMS -
> What is DBMS?

>DBMS: Data Base Management System

>DBMS is a software used to store, update, manage data in proper manner.

>There are three type of DBMS

1)Network-DBMS
2)Hierarchical-DBMS
3)Relational-DBMS

#1 Network-DBMS:

This is one of the type of DBMS where data are stored in Network format
for ex. Google maps 

#2 Hierarchical-DBMS:

This is one of the type of DBMS where data are stored in trees structure

for ex. CEO > CTO > VP > GM > TL > EMPLOYEE

#3 Relational-DBMS:

R-DBMS is very popular DBMS used in market because data are stored in table format which is very easy to fatch the data

for ex. Student details, Bank details, College details.

(.)What is MongoDB:

>MongoDB is a platform, document oriented database that provides,

High performance

High availability

High scalability

Flexible

>Mongo DB works on the concept of collection and document. 

(.)Why MongoDB ?

> MongoDB stores data in flexible, Json-like documents. 

> The document model maps to the objects in your application code, making data easy to work.

> MongoDB is a distributed database at its core, so high availability, horizontal scalling, and Graphics distribution are buit in easy to use.

C-Create

R-Read

U- Update

D- Delete/Remove

C- Create Operation :

If you want to insert datas to the database or any new entry in this database we can use create operation with respect to single data and multiple datas.

R- Read Operation :

Ex. Adding a new entry in database and post new information in our account
 After modification if we want to read the base in database we can use read opretation.

Ex. How many like and comment for a post 

U- Update Operation :

If we want to update any data in the database we can use update opretation 
It is simple edit operation.
It is strong command because if we update something it cannot restrored again

Ex. Editing it post 

D- Delete/Remove Operation :

If we want to delete any data in the database we can use delete opretation.
if we want to remove any data in the database we can use remove opretation
Once it delted it cannot be restrore.

CRUD

Create:

insertOne(data,options)     -> is used to insert single(one) data into to the database.
insertMany(data,options)    -> is used to insert multiple(many) data into to the database.

Read:

find(filter,options)       -> is used to find all data in to the database.   
findOne(filter,options)    -> is used to find first data match with database.

In read operations filter is used to apply the condition, based on that condition find command is gives all the data which match the condition.

FindOne one only first data match with database.

Update:

updateOne(filter,data,options) -> is used to update single data in the database.

updateMany(filter,data,options) -> is used to update multiple datas in the database.

replaceOne(filter,data,options) -> is used to replace single data in the database.

DELETE:

deleteOne(filter,options) -> is used to delete single data in the database.

deleteMany(filter,options) -> is used to delete multiple data in the database.

=> To craete database we use the following:

> Use database-name

=> To create database we use the following:

> Use students

> switched to db students

> db.studentsDetails.insertOne();
     {collection name}


JSON: JavaScript Object Notation.
-->JSON is a format used for storing and transporting the data.
-->JSON is used when the data is sent from a server to a web page.
-->JSON syntax is derived from the javascript
-->JSON format is text.
-->Code for reading and generating JSON data can be written in any programming language.
-->Commenly used for API's and configs.
--> Lightweight and easy to read and write
-->Integrated easily with most of the language

JSON TYPES: 

-->Strings "hello","students"
-->Numbers 10,1.5,-30
-->Boolean true,false
-->null    null
-->Arrays  [1,2,3],["Hello","World"]
-->Objects {"key":"values"} {"age":20}


/*

Create patient database

>add 6 datas
>update 3 datas > 3 patients discharged
>delete any one patient
*/

Relations 

1)One to one relationship
2)One to many relationship
3)Many to many relationship

> use realations
switched to db realations
> db.realationDetails.insertOne(
... {
... "name":"dinesh",
... "contact":8975641202,
... "age":25
... }
... )
{
        "acknowledged" : true,
        "insertedId" : ObjectId("62874f4969636671c47d6f93")
}
> db.realationDetails.insertOne( { "course":"JS", "id":ObjectId("62874f4969636671c47d6f93") } )
{
        "acknowledged" : true,
        "insertedId" : ObjectId("62874fb869636671c47d6f94")
}
> db.realationDetails.find().pretty()
{
        "_id" : ObjectId("62874f4969636671c47d6f93"),
        "name" : "dinesh",
        "contact" : 8975641202,
        "age" : 25
}
{
        "_id" : ObjectId("62874fb869636671c47d6f94"),
        "course" : "JS",
        "id" : ObjectId("62874f4969636671c47d6f93")
}
> db.realationDetails.find()
{ "_id" : ObjectId("62874f4969636671c47d6f93"), "name" : "dinesh", "contact" : 8975641202, "age" : 25 }
{ "_id" : ObjectId("62874fb869636671c47d6f94"), "course" : "JS", "id" : ObjectId("62874f4969636671c47d6f93") }
> db.realationDetails.find().pretty()9
uncaught exception: SyntaxError: unexpected token: numeric literal :
@(shell):1:35
> use youtube
switched to db youtube
> db.youtubeVideo.insertOne(
... {
... "topic":"mongodb",
... "likes":"1M"
... }
... )
{
        "acknowledged" : true,
        "insertedId" : ObjectId("6287549b69636671c47d6f95")
}
> db.youtubeVideo.insertMany(
... [
... {
... "name":"Ashish",
... "age":23,
... "id":ObjectId("6287549b69636671c47d6f95")
... },
... {
... "name":"sunil",
... "age":21,
... "id":ObjectId("6287549b69636671c47d6f95")
... },
... {
... "name":"shubham",
... "age":25,
... "id"ObjectId("6287549b69636671c47d6f95")
... }
... ]
... )
uncaught exception: SyntaxError: missing : after property id :
@(shell):16:4
> db.youtubeVideo.insertMany( [ { "name":"Ashish", "age":23, "id":ObjectId("6287549b69636671c47d6f95") }, { "name":"sunil", "age":21, "id":ObjectId("6287549b69636671c47d6f95") }, { "name":"shubham", "age":25, "id":ObjectId("6287549b69636671c47d6f95") } ] )
{
        "acknowledged" : true,
        "insertedIds" : [
                ObjectId("6287557069636671c47d6f96"),
                ObjectId("6287557069636671c47d6f97"),
                ObjectId("6287557069636671c47d6f98")
        ]
}
> db.youtubeVideo.find().pretty()9
uncaught exception: SyntaxError: unexpected token: numeric literal :
@(shell):1:31
> db.youtubeVideo.find().pretty()
{
        "_id" : ObjectId("6287549b69636671c47d6f95"),
        "topic" : "mongodb",
        "likes" : "1M"
}
{
        "_id" : ObjectId("6287557069636671c47d6f96"),
        "name" : "Ashish",
        "age" : 23,
        "id" : ObjectId("6287549b69636671c47d6f95")
}
{
        "_id" : ObjectId("6287557069636671c47d6f97"),
        "name" : "sunil",
        "age" : 21,
        "id" : ObjectId("6287549b69636671c47d6f95")
}
{
        "_id" : ObjectId("6287557069636671c47d6f98"),
        "name" : "shubham",
        "age" : 25,
        "id" : ObjectId("6287549b69636671c47d6f95")
}
> db.youtubeVideo2.insertMany(
... [
... {
...
...
>
> db.youtubeVideo2.insertOne( { "topic":"mongodb", "likes":"1M" } )
{
        "acknowledged" : true,
        "insertedId" : ObjectId("628756f369636671c47d6f99")
}
> db.youtubeVideo2.insertOne( {"topic":"js", "likes":"2M" })
{
        "acknowledged" : true,
        "insertedId" : ObjectId("6287578069636671c47d6f9a")
}
> db.youtubeVideo3.insertOne( {"topic":"css", "likes":"1.5M" })
{
        "acknowledged" : true,
        "insertedId" : ObjectId("628757a369636671c47d6f9b")
}
> db.youtubeVideo4.insertOne( {"topic":"html", "likes":"2.5M" })
{
        "acknowledged" : true,
        "insertedId" : ObjectId("628757c269636671c47d6f9c")
}
> db.youtubeVideo2.insertOne( {"name":"harish", "age":"25", "id" ObjectId("628756f369636671c47d6f99") })
uncaught exception: SyntaxError: missing : after property id :
@(shell):1:63
> db.youtubeVideo2.insertOne( {"name":"harish", "age":"25", "id": ObjectId("628756f369636671c47d6f99") })
{
        "acknowledged" : true,
        "insertedId" : ObjectId("6287581a69636671c47d6f9d")
}
> db.youtubeVideo2.insertOne( {"name":"rishabh", "age":"26", "id": ObjectId("628756f369636671c47d6f99") })
{
        "acknowledged" : true,
        "insertedId" : ObjectId("6287582f69636671c47d6f9e")
}
> db.youtubeVideo2.insertOne( {"name":"rishu", "age":"22", "id": ObjectId("628756f369636671c47d6f99") })
{
        "acknowledged" : true,
        "insertedId" : ObjectId("6287583d69636671c47d6f9f")
}
> db.youtubeVideo3.insertOne( {"name":"kira", "age":"22", "id": ObjectId("628756f369636671c47d6f99) })
uncaught exception: SyntaxError: "" literal not terminated before end of script :
@(shell):1:100
> db.youtubeVideo3.insertOne( {"name":"kira", "age":"22", "id": ObjectId("628756f369636671c47d6f99") })
{
        "acknowledged" : true,
        "insertedId" : ObjectId("6287588769636671c47d6fa0")
}
> db.youtubeVideo3.insertOne( {"name":"ravi", "age":"21", "id": ObjectId("628756f369636671c47d6f99") })
{
        "acknowledged" : true,
        "insertedId" : ObjectId("6287589469636671c47d6fa1")
}
> db.youtubeVideo2.find().pretty()
{
        "_id" : ObjectId("628756f369636671c47d6f99"),
        "topic" : "mongodb",
        "likes" : "1M"
}
{
        "_id" : ObjectId("6287578069636671c47d6f9a"),
        "topic" : "js",
        "likes" : "2M"
}
{
        "_id" : ObjectId("6287581a69636671c47d6f9d"),
        "name" : "harish",
        "age" : "25",
        "id" : ObjectId("628756f369636671c47d6f99")
}
{
        "_id" : ObjectId("6287582f69636671c47d6f9e"),
        "name" : "rishabh",
        "age" : "26",
        "id" : ObjectId("628756f369636671c47d6f99")
}
{
        "_id" : ObjectId("6287583d69636671c47d6f9f"),
        "name" : "rishu",
        "age" : "22",
        "id" : ObjectId("628756f369636671c47d6f99")
}
> db.youtubeVideo3.find().pretty()
{
        "_id" : ObjectId("628757a369636671c47d6f9b"),
        "topic" : "css",
        "likes" : "1.5M"
}
{
        "_id" : ObjectId("6287588769636671c47d6fa0"),
        "name" : "kira",
        "age" : "22",
        "id" : ObjectId("628756f369636671c47d6f99")
}
{
        "_id" : ObjectId("6287589469636671c47d6fa1"),
        "name" : "ravi",
        "age" : "21",
        "id" : ObjectId("628756f369636671c47d6f99")
}
> db.youtubeVideo4.find().pretty()
{
        "_id" : ObjectId("628757c269636671c47d6f9c"),
        "topic" : "html",
        "likes" : "2.5M"
}